{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React, { useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MainScreen() {\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 5000\n    }).start();\n  };\n\n  var fadeOut = function fadeOut() {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 3000\n    }).start();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Animated.View, {\n      style: [styles.fadingContainer, {\n        opacity: fadeAnim\n      }],\n      children: _jsx(Text, {\n        style: styles.fadingText,\n        children: \"Fading View!\"\n      })\n    }), _jsxs(View, {\n      style: styles.buttonRow,\n      children: [_jsx(Button, {\n        title: \"Fade In View\",\n        onPress: fadeIn\n      }), _jsx(Button, {\n        title: \"Fade Out View\",\n        onPress: fadeOut\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  fadingContainer: {\n    padding: 20,\n    backgroundColor: \"powderblue\"\n  },\n  fadingText: {\n    fontSize: 28\n  },\n  buttonRow: {\n    flexBasis: 100,\n    justifyContent: \"space-evenly\",\n    marginVertical: 16\n  }\n});","map":{"version":3,"sources":["/Users/admin/APP/react-native-expo/app/app1/screens/Animationscreen.js"],"names":["StatusBar","React","useRef","MainScreen","fadeAnim","Animated","Value","current","fadeIn","timing","toValue","duration","start","fadeOut","styles","container","fadingContainer","opacity","fadingText","buttonRow","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","fontSize","flexBasis","marginVertical"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;;;;;;AAIA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,QAAQ,GAAGF,MAAM,CAAC,IAAIG,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAEnBH,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,QAAhB,EAA0B;AACxBM,MAAAA,OAAO,EAAE,CADe;AAExBC,MAAAA,QAAQ,EAAE;AAFc,KAA1B,EAGGC,KAHH;AAID,GAND;;AAQA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpBR,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,QAAhB,EAA0B;AACxBM,MAAAA,OAAO,EAAE,CADe;AAExBC,MAAAA,QAAQ,EAAE;AAFc,KAA1B,EAGGC,KAHH;AAID,GAND;;AAQA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,MAAM,CAACC,SAA5B;AAAA,eACE,KAAC,QAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE,CACLD,MAAM,CAACE,eADF,EAEL;AAEEC,QAAAA,OAAO,EAAEb;AAFX,OAFK,CADT;AAAA,gBASE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACI,UAApB;AAAA;AAAA;AATF,MADF,EAYE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA,iBACE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,OAAO,EAAEX;AAAtC,QADF,EAEE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,eAAd;AAA8B,QAAA,OAAO,EAAEK;AAAvC,QAFF;AAAA,MAZF;AAAA,IADF;AAmBD;AAED,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BR,EAAAA,eAAe,EAAE;AACfS,IAAAA,OAAO,EAAE,EADM;AAEfC,IAAAA,eAAe,EAAE;AAFF,GANc;AAU/BR,EAAAA,UAAU,EAAE;AACVS,IAAAA,QAAQ,EAAE;AADA,GAVmB;AAa/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,SAAS,EAAE,GADF;AAETJ,IAAAA,cAAc,EAAE,cAFP;AAGTK,IAAAA,cAAc,EAAE;AAHP;AAboB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useRef } from \"react\";\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Animated, Button, SafeAreaView } from \"react-native\";\n\nexport default function MainScreen() {\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  const fadeIn = () => {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 5000\n    }).start();\n  };\n\n  const fadeOut = () => {\n    // Will change fadeAnim value to 0 in 3 seconds\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 3000\n    }).start();\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Animated.View\n        style={[\n          styles.fadingContainer,\n          {\n            // Bind opacity to animated value\n            opacity: fadeAnim\n          }\n        ]}\n      >\n        <Text style={styles.fadingText}>Fading View!</Text>\n      </Animated.View>\n      <View style={styles.buttonRow}>\n        <Button title=\"Fade In View\" onPress={fadeIn} />\n        <Button title=\"Fade Out View\" onPress={fadeOut} />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  fadingContainer: {\n    padding: 20,\n    backgroundColor: \"powderblue\"\n  },\n  fadingText: {\n    fontSize: 28\n  },\n  buttonRow: {\n    flexBasis: 100,\n    justifyContent: \"space-evenly\",\n    marginVertical: 16\n  }\n});\n"]},"metadata":{},"sourceType":"module"}